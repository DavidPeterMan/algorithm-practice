class Solution {
    /*
    dp[i][0] = max{ dp[i-1][0], dp[i-1][1] + p[i] } // max{rest, sell}
    dp[i][1] = max{ dp[i-1][1], dp[i-2][0] - p[i] } // max{rest, buy}
     */
    public int maxProfit(int[] p) {
        int[][] dp = new int[p.length][2];
        // corner cases: i == 0; i == 1
        dp[0][0] = 0;
        dp[0][1] = -p[0];
        for (int i = 1; i < p.length; i++) {
            dp[i][0] = Math.max(dp[i - 1][0], dp[i - 1][1] + p[i]);

            int tmp = i >= 2 ? dp[i - 2][0] : 0;
            dp[i][1] = Math.max(dp[i - 1][1], tmp - p[i]);
        }
        return dp[p.length - 1][0];
    }
}

//runtime_error:Line 9: java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
//last_testcase:[]
